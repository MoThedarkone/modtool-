// === üì¶ utils/twitchTokenManager.js ===
require('dotenv').config();
const fs = require('fs');
const fetch = require('node-fetch');
const path = require('path');

const tokenPath = path.join(__dirname, '../data/twitchTokenCache.json');

function saveTokenData(data) {
  fs.writeFileSync(tokenPath, JSON.stringify(data, null, 2));
}

function loadTokenData() {
  if (!fs.existsSync(tokenPath)) return null;
  try {
    return JSON.parse(fs.readFileSync(tokenPath));
  } catch {
    return null;
  }
}

async function refreshAccessToken() {
  const refreshToken = process.env.TWITCH_REFRESH_TOKEN;
  if (!refreshToken) throw new Error('Missing TWITCH_REFRESH_TOKEN in .env');

  const params = new URLSearchParams({
    grant_type: 'refresh_token',
    refresh_token: refreshToken,
    client_id: process.env.TWITCH_CLIENT_ID,
    client_secret: process.env.TWITCH_SECRET,
  });

  const res = await fetch('https://id.twitch.tv/oauth2/token', {
    method: 'POST',
    body: params,
  });

  const data = await res.json();

  if (!data.access_token) {
    throw new Error('Failed to refresh Twitch token: ' + JSON.stringify(data));
  }

  console.log('üîÅ [Twitch] Access token refreshed.');

  // Optional: Save to file so other modules can use it
  saveTokenData(data);

  // Optionally update env var in-memory
  process.env.TWITCH_OAUTH_TOKEN = `oauth:${data.access_token}`;
  return data;
}

module.exports = {
  refreshAccessToken,
  loadTokenData,
};
